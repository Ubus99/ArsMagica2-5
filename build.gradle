buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:3.2.0'
        //classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}

// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

apply plugin: 'eclipse'
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

apply plugin: 'idea'
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

apply plugin: 'forge'
//apply plugin: "com.wynprice.cursemaven"

version = "1.4.3"
group = "am2" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AM2"
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
    //mappings = "stable_12"  //uncomment this line to use newest Forge mappings. Needs a lot of rework.
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'am2.preloader.AM2PreloaderContainer'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

dependencies {

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand(
                        'version': project.version,
                        'mcversion': project.minecraft.version
                )
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
